module Issuer where

import StockClass
import StockClassType

template Issuer
  with
    fairmint: Party
    issuer: Party
    name: Text
    authorizedShares: Int
    issuedShares: Int
  where
    signatory issuer, fairmint

    ensure 
      name /= ""
      && authorizedShares > 0
      && issuedShares >= 0
      && issuedShares <= authorizedShares

    choice CreateStockClass : (ContractId StockClass, ContractId Issuer)
      with
        stockClassType: StockClassType
        shares: Int
      controller issuer
      do
        assertMsg "Not enough shares available" (issuedShares + shares <= authorizedShares)
        issuerCid <- create this
          with
            fairmint = fairmint
            issuer = issuer
            name = name
            authorizedShares = authorizedShares
            issuedShares = issuedShares + shares
        -- TODO merge with existing stock class if same type?
        stockClassCid <- create StockClass with
          fairmint, issuer, stockClassType, authorizedShares=shares, issuedShares=0
        return (stockClassCid, issuerCid)